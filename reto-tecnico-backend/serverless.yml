service:
  name: sls-template

custom:
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true
  serverless-iam-roles-per-function:
    defaultInherit: true
  globalTables:
    regions: # list of regions in which you want to set up global tables
      - us-east-1
    createStack: false
  prune: # automatically prune old lambda versions
    automatic: true
    number: 3

plugins:
  - serverless-webpack
  - serverless-offline
  - serverless-iam-roles-per-function
  - serverless-create-global-dynamodb-table
  - serverless-prune-plugin

provider:
  name: aws
  runtime: nodejs12.x
  frameworkVersion: ‘1.64.1’
  stage: ${opt:stage, 'local'}
  region: ${opt:region, 'us-east-1'}
  apiGateway:
    minimumCompressionSize: 1024
  environment:
    DEBUG: '*'
    NODE_ENV: ${self:provider.stage}
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
  tracing:
    lambda: true
  iamRoleStatements:
    - Effect: Allow
      Action:
        - xray:PutTraceSegments
        - xray:PutTelemetryRecords
      Resource: '*'

functions:
  hello:
    handler: src/handler.hello
    events:
      - http:
          method: get
          path: hello
  rootData:
    handler: src/handler.rootData
    events:
      - http:
          method: get
          path: rootData
  starShipsData:
    handler: src/handler.starShips
    events:
      - http:
          method: get
          path: starShips

resources:
  Resources:
      usersTable:
        Type: AWS::DynamoDB::Table
        Properties:
          TableName: employee
          AttributeDefinitions:
            - AttributeName: dni
              AttributeType: S
          KeySchema:
            - AttributeName: dni
              KeyType: HASH
          ProvisionedThroughput:
            ReadCapacityUnits: 1
            WriteCapacityUnits: 1
